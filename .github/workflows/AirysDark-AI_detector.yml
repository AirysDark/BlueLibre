name: AirysDark-AI - Detector (bootstrap)

on:
  workflow_dispatch: {}

permissions:
  contents: write
  pull-requests: write

jobs:
  detect:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout (no credentials)
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      # Fetch tools ONLY here (per your design). The generated PROBE/BUILD flows wonâ€™t fetch again.
      - name: Fetch tools.tar (ONLY here)
        shell: bash
        run: |
          set -euxo pipefail
          mkdir -p tools
          curl -fL "https://raw.githubusercontent.com/AirysDark-AI/AirysDark-AI_builder/main/tools/tools.tar" -o /tmp/tools.tar
          tar -xvf /tmp/tools.tar -C tools
          ls -la tools

      - name: Run detector (writes scan.json + AirysDark-AI_prob.yml)
        shell: bash
        run: |
          set -euxo pipefail
          python3 tools/AirysDark-AI_detector.py
          test -f tools/airysdark_ai_scan.json
          test -f .github/workflows/AirysDark-AI_prob.yml

      - name: Build PR body (detector results)
        id: body
        shell: bash
        run: |
          set -euo pipefail
          cat > /tmp/_pr_body_gen.py <<'PY'
import json, pathlib
p = pathlib.Path("tools/airysdark_ai_scan.json")
scan = {}
if p.exists():
    try:
        scan = json.loads(p.read_text(encoding="utf-8", errors="ignore"))
    except Exception:
        scan = {}

lines = []
lines.append("### AirysDark-AI: detector results")
lines.append("")
types = scan.get("types", [])
evid  = scan.get("evidence", {})

if p.exists():
    if types:
        lines.append("**Detected build types:**")
        for t in types:
            lines.append(f"- {t}")
            for ev in (evid.get(t, [])[:6] or []):
                lines.append(f"  - {ev}")
    else:
        lines.append("_No build types detected._")
else:
    lines.append("_No detector JSON found (tools/airysdark_ai_scan.json)._")

lines.append("")
lines.append("**Next steps:**")
lines.append("1. Edit `.github/workflows/AirysDark-AI_prob.yml` and set `env.TARGET` to the build you want (e.g. `android`, `linux`, `cmake`).")
lines.append("2. Merge this PR.")
lines.append("3. From the Actions tab, manually run **AirysDark-AI - Probe (LLM builds workflow)**.")

pathlib.Path("pr_body.md").write_text("\n".join(lines) + "\n", encoding="utf-8")
PY
          python3 /tmp/_pr_body_gen.py
          echo "PR_BODY_PATH=pr_body.md" >> "$GITHUB_OUTPUT"

      - name: Stage detector outputs
        id: diff
        shell: bash
        run: |
          set -euxo pipefail
          git add -A
          if git diff --cached --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else:
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      # PR creation uses BOT_TOKEN. (KB_PUSH_TOKEN is only used later by probe/build workflows.)
      - name: Open PR with PROBE workflow
        if: steps.diff.outputs.changed == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: ${{ secrets.BOT_TOKEN }}
          branch: ai/airysdark-ai-prob
          commit-message: "chore: add AirysDark-AI_prob.yml + tools (bootstrap)"
          title: "AirysDark-AI: add single PROBE workflow + tools"
          body-path: ${{ steps.body.outputs.PR_BODY_PATH }}
          labels: automation, ci
