name: BlueLibre AI Autobuilder â€” Android

on:
  push:
  pull_request:
  workflow_dispatch:

jobs:
  android:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - uses: actions/checkout@v4
        with: { fetch-depth: 0 }

      - uses: actions/setup-python@v5
        with: { python-version: "3.11" }

      - name: Install Python deps for autobuilder
        run: pip install requests

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"

      - name: Set up Android SDK
        uses: android-actions/setup-android@v3

      - name: Accept Android licenses
        run: yes | sdkmanager --licenses

      - name: Install Android SDK components
        run: |
          sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Make Gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Build (capture)
        id: build
        run: |
          set -euxo pipefail
          BUILD_CMD="./gradlew assembleDebug --stacktrace"
          echo "BUILD_CMD=$BUILD_CMD" >> $GITHUB_OUTPUT
          bash -lc "$BUILD_CMD" | tee build.log
        continue-on-error: true

      - name: Attempt AI auto-fix with OpenAI
        if: steps.build.outcome != 'success'
        env:
          PROVIDER: openai
          OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
          OPENAI_MODEL: ${{ vars.OPENAI_MODEL || 'gpt-4.1-mini' }}
          AI_BUILDER_ATTEMPTS: "2"
          BUILD_CMD: ${{ steps.build.outputs.BUILD_CMD }}
        run: python3 tools/ai_autobuilder.py || true

      - name: Push branch with fixes (if any)
        if: steps.build.outcome != 'success'
        run: |
          set -eux
          if git diff --quiet HEAD; then exit 0; fi
          BRANCH="fix/android-ai-autobuilder-${{ github.run_id }}"
          git config user.name "ai-autobuilder[bot]"
          git config user.email "ai-autobuilder@users.noreply.github.com"
          git switch -c "$BRANCH"
          git add -A
          git commit -m "AI autobuilder: Android fixes" || true
          git push --set-upstream origin "$BRANCH" || true

      - name: Upload APK (optional)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-apks
          path: "**/build/outputs/**/*.apk"
          if-no-files-found: ignore