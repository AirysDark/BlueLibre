name: AirysDark-AI - Android (generated)

on:
  workflow_dispatch: {}
  push:
    branches: ["**"]
  pull_request: {}

jobs:
  build:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - run: pip install requests

      # Android SDK / Java
      - uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: "17"
      - uses: android-actions/setup-android@v3
      - run: yes | sdkmanager --licenses
      - run: sdkmanager "platform-tools" "platforms;android-34" "build-tools;34.0.0"

      - name: Ensure AirysDark-AI tools (detector, builder)
        shell: bash
        run: |
          set -euo pipefail
          mkdir -p tools
          BASE_URL="https://raw.githubusercontent.com/AirysDark-AI/AirysDark-AI_builder/main/tools"
          [ -f tools/AirysDark-AI_detector.py ] || curl -fL "$BASE_URL/AirysDark-AI_detector.py" -o tools/AirysDark-AI_detector.py
          [ -f tools/AirysDark-AI_builder.py ]  || curl -fL "$BASE_URL/AirysDark-AI_builder.py"  -o tools/AirysDark-AI_builder.py

      - name: Build (capture)
        id: build
        shell: bash
        run: |
          set -euxo pipefail
          CMD="$BUILD_CMD"
          echo "BUILD_CMD=$CMD" >> "$GITHUB_OUTPUT"
          set +e; bash -lc "$CMD" | tee build.log; EXIT=$?; set -e
          echo "EXIT_CODE=$EXIT" >> "$GITHUB_OUTPUT"
          [ -s build.log ] || echo "(no build output captured)" > build.log
          exit 0
        continue-on-error: true

      - name: Upload build log
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-build-log
          path: build.log
          if-no-files-found: warn
          retention-days: 7

      # --- AI auto-fix (OpenAI -> llama.cpp) ---
      - name: Build llama.cpp (CMake, no CURL, in temp)
        if: always() &&  != '0'
        run: |
          set -euxo pipefail
          TMP="/home/runner/work/_temp"
          cd "$TMP"
          rm -rf llama.cpp
          git clone --depth=1 https://github.com/ggml-org/llama.cpp
          cd llama.cpp
          cmake -S . -B build -D CMAKE_BUILD_TYPE=Release -DLLAMA_CURL=OFF
          cmake --build build -j
          echo "LLAMA_CPP_BIN=$PWD/build/bin/llama-cli" >> $GITHUB_ENV

      - name: Fetch GGUF model (TinyLlama)
        if: always() &&  != '0'
        run: |
          mkdir -p models
          curl -L -o models/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf \
            https://huggingface.co/TheBloke/TinyLlama-1.1B-Chat-v1.0-GGUF/resolve/main/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf

      - name: Attempt AI auto-fix (OpenAI -> llama fallback)
        if: always() &&  != '0'
        env:
          PROVIDER: openai
          FALLBACK_PROVIDER: llama
          OPENAI_API_KEY: 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
          OPENAI_MODEL: gpt-4o-mini
          MODEL_PATH: models/tinyllama-1.1b-chat-v1.0.Q4_K_M.gguf
          AI_BUILDER_ATTEMPTS: "3"
          BUILD_CMD: 
        run: python3 tools/AirysDark-AI_builder.py || true

      - name: Upload AI patch (if any)
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: android-ai-patch
          path: .pre_ai_fix.patch
          if-no-files-found: ignore
          retention-days: 7

      - name: Check for changes
        id: diff
        run: |
          git add -A
          if git diff --cached --quiet; then
            echo "changed=false" >> "$GITHUB_OUTPUT"
          else:
            echo "changed=true" >> "$GITHUB_OUTPUT"
          fi

      - name: Pin git remote with token (just-in-time)
        if:  == 'true'
        env:
          BOT_TOKEN: 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
          REPO_SLUG: AirysDark/BlueLibre
        run: |
          set -euxo pipefail
          git config --local --name-only --get-regexp '^http\.https://github\.com/\.extraheader$' >/dev/null 2>&1 && \
            git config --local --unset-all http.https://github.com/.extraheader || true
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          git remote set-url origin "https://x-access-token:${BOT_TOKEN}@github.com/${REPO_SLUG}.git"
          git config --global url."https://x-access-token:${BOT_TOKEN}@github.com/".insteadOf "https://github.com/"
          git remote -v

      - name: Create PR with AI fixes
        if:  == 'true'
        uses: peter-evans/create-pull-request@v6
        with:
          token: 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
          branch: ai/airysdark-ai-autofix-android
          commit-message: "chore: AirysDark-AI auto-fix (android)"
          title: "AirysDark-AI: automated build fix (android)"
          body: |
            This PR was opened automatically by a generated workflow after a failed build.
            - Build command: 
            - Captured the failing build log
            - Proposed a minimal fix via AI
            - Committed the changes for review
          labels: automation, ci
